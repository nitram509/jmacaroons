
Changelog jmacaroons
=====================

Version 0.5.0 (2022-02-07)
--------------------------

   * Add V2 serialization format, thanks to the contribution by Neil Madden
   * Add new ```Macaroon.builder``` method to replace the separate class (deprecates: MacaroonBuilder), thanks to the contribution by TimothÃ©e Peignier

Version 0.4.1 (2019-08-07)
--------------------------
   ! Fix timezone handling in the TimestampCaveatVerifier, when millis were used
   ! Fix examples
   ! Fix derived key handling more consistent


Version 0.4.0 (2019-08-04)
--------------------------

   ! Fix spelling mistake satisfyExcact -> satisfyExact (breaking API change, but fixes this jarring typo)
   ! Fix 3rd party caveats have to be encrypted using a unique nonce, else the security model breaks
   ! Fix possible timing attack issue while comparing HMACs (https://github.com/nitram509/jmacaroons/issues/6)
   ! Changed key handling to consistently ensure we always derive a fixed length key from that string or bytes, to be consistent with other macaroon implementations (https://github.com/nitram509/jmacaroons/issues/11)
   * Switch to Java 1.8 support


Version 0.3.1 (2014-12-19)
--------------------------

   * Fixed: a bug in verifying third-party caveats, they aren't optional but mandatory


Version 0.3.0 (2014-12-06)
--------------------------

   + Added: AuthoritiesCaveatVerifier to verify given authorities, which is a common use case
   + Added: not only strings but also byte arrays may be used as secret keys
   * Catched up latest changes from libmacaroons (2014-10-05 hash 568ff74, vid isn't encoded as base64, but raw)
   * Improved performance via clone HMAC tool, because its 25% faster than creating a new one via 'getInstance()'
   ! Serialization uses Base64 URL safe encoding (RFC 4648). This follows libmacaroons implementation,
     but may break compatibility to older libs. For backward compatibility, De-Serialization accepts both base64 standards.


Version 0.2.0 (2014-09-26)
--------------------------

   + Added: adding third party caveats to macaroons is possible
   + Added: verifying third party caveats on macaroons is possible
   * Fixed: modifying macaroons also copies caveats
   * Improved java-docs
   * Reworked macaroon structure, using caveat packets


Version 0.1.7 (2014-09-06)
--------------------------

   + Added feature for verifying general caveats constrains
   + Added TimestampCaveatVerifier


Version 0.1.7 (2014-09-06)
--------------------------

   + Lowered the required runtime to JRE 1.6


Version 0.1.6 (2014-09-03)
--------------------------

   + Improved MacaroonsVerifier (API changed)


Version 0.1.4 (2014-08-25)
--------------------------

   * Initial release


